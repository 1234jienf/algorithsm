
## 문제

### 로또 번호를 선택하는데 사용되는 가장 유명한 전략은 49가지 수 중 k(k>6)개의 수를 골라 집합 S를 만든 
### 다음 그 수만 가지고 번호를 선택하는 것이다.

### 예를 들어, k=8, S={1,2,3,5,8,13,21,34}인 경우
### 이 집합 S에서 수를 고를 수 있는 경우의 수는 총 28가지이다. 
### ([1,2,3,5,8,13], [1,2,3,5,8,21], [1,2,3,5,8,34], [1,2,3,5,13,21], ..., [3,5,8,13,21,34])


### 집합 S와 k가 주어졌을 때, 수를 고르는 모든 방법을 구하는 프로그램을 작성하시오.

## 입력

### 입력은 여러 개의 테스트 케이스로 이루어져 있다.
### 각 테스트 케이스는 한 줄로 이루어져 있다

import sys

def dfs(n,s,tlst):
  if n == 6: # 종료 조건 : 6개의 숫자를 모두 선택할 때
    ans.append(tlst)
    return
  
  for j in range(s,N):
    dfs(n+1, j+1, tlst+[lst[j]])
  
while True:
  lst = list(map(int,input().split()))
  if lst[0] == 0: # 입력이 0일 때 종료
    break

  N = lst[0]
  lst = lst[1:]

  ans = []
  dfs(0,0,[])

  for ans_lst in ans:
    print(*ans_lst)
  print()